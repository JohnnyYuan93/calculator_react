{"ast":null,"code":"var _jsxFileName = \"/Users/jiapengyuan/Desktop/Project/react-calculator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const resultRef = useRef(null);\n  const [result, setResult] = useState(0);\n\n  // tip calculator\n  const [bill, setBill] = useState(\"\");\n\n  // State for storing tip percentage \n  const [tip, setTip] = useState(\"10%\");\n\n  // State for storing number of splits \n  const [split, setSplit] = useState(1);\n\n  // State for storing split total \n  const [splitTotal, setSplitTotal] = useState(0);\n\n  // Function to handle changes in the tip input \n  function handleTipChange(e) {\n    let value = e.target.value.replace(\"%\", \"\");\n    if (value.indexOf(\"%\") === -1) {\n      value = value + \"%\";\n    }\n    setTip(value);\n  }\n\n  // Function to handle changes in the \n  // bill total input \n  function handleBillChange(e) {\n    setBill(e.target.value);\n  }\n\n  // Function to decrease the number of splits by 1 \n  function splitMinus() {\n    setSplit(oldValue => Math.max(oldValue - 1, 1));\n  }\n\n  // Function to increase the number of splits by 1 \n  function splitPlus() {\n    setSplit(oldValue => oldValue + 1);\n  }\n\n  // Function to calculate the split total. based on bill, tip, and number of splits \n  function calculate() {\n    const percentage = 1 + parseInt(tip.replace(\"%\", \"\")) / 100;\n    const result = (bill * percentage / split).toFixed(2);\n    setSplitTotal(result);\n  }\n\n  // useEffect hook to calculate the split total \n  // whenever bill, tip, or split changes \n  useEffect(() => {\n    calculate();\n  }, [bill, tip, split]);\n\n  //\n\n  function plus(e) {\n    e.preventDefault();\n    // const inputVal = inputRef.current.value; \n    // const newResult = result + Number(inputVal); \n    // setResult(newResult); \n    setResult(result => result + Number(inputRef.current.value));\n  }\n  function minus(e) {\n    e.preventDefault();\n    const inputVal = inputRef.current.value;\n    const newResult = result - Number(inputVal);\n    setResult(newResult);\n  }\n  function times(e) {\n    e.preventDefault();\n    const inputVal = inputRef.current.value;\n    const newResult = result * Number(inputVal);\n    setResult(newResult);\n  }\n  function divide(e) {\n    e.preventDefault();\n    const inputVal = inputRef.current.value;\n    const newResult = result / Number(inputVal);\n    setResult(newResult);\n  }\n  function resetInput(e) {\n    e.preventDefault();\n    inputRef.current.value = 0;\n  }\n  function resetResult(e) {\n    e.preventDefault();\n    setResult(0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Bill total\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"0.00\",\n      value: bill,\n      onChange: handleBillChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Tip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"0.00\",\n      value: tip,\n      onChange: handleTipChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"split\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Split\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: splitMinus,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: split\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: splitPlus,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Split total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: splitTotal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simplest Working Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: resultRef,\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        pattern: \"[0-9]\",\n        ref: inputRef,\n        type: \"number\",\n        placeholder: \"Type a number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: plus,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: minus,\n        children: \"subtract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: times,\n        children: \"multiply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: divide,\n        children: \"divide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetInput,\n        children: \"reset input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetResult,\n        children: \"reset result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LX/r5ZYTVqwy1SvW4kyGBzLsqko=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","inputRef","resultRef","result","setResult","bill","setBill","tip","setTip","split","setSplit","splitTotal","setSplitTotal","handleTipChange","e","value","target","replace","indexOf","handleBillChange","splitMinus","oldValue","Math","max","splitPlus","calculate","percentage","parseInt","toFixed","useEffect","plus","preventDefault","Number","current","minus","inputVal","newResult","times","divide","resetInput","resetResult","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","ref","pattern","_c","$RefreshReg$"],"sources":["/Users/jiapengyuan/Desktop/Project/react-calculator/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\"; \nimport \"./App.css\"; \n \nfunction App() { \n  const inputRef = useRef(null); \n  const resultRef = useRef(null); \n  const [result, setResult] = useState(0); \n\n  // tip calculator\n  const [bill, setBill] = useState(\"\"); \n  \n  // State for storing tip percentage \n  const [tip, setTip] = useState(\"10%\"); \n\n  // State for storing number of splits \n  const [split, setSplit] = useState(1); \n\n  // State for storing split total \n  const [splitTotal, setSplitTotal] = useState(0); \n\n  // Function to handle changes in the tip input \n  function handleTipChange(e) { \n      let value = e.target.value.replace(\"%\", \"\"); \n      if (value.indexOf(\"%\") === -1) { \n          value = value + \"%\"; \n      } \n      setTip(value); \n  } \n\n  // Function to handle changes in the \n  // bill total input \n  function handleBillChange(e) { \n      setBill(e.target.value); \n  } \n\n  // Function to decrease the number of splits by 1 \n  function splitMinus() { \n      setSplit((oldValue) => Math.max(oldValue - 1, 1)); \n  } \n\n  // Function to increase the number of splits by 1 \n  function splitPlus() { \n      setSplit((oldValue) => oldValue + 1); \n  } \n\n  // Function to calculate the split total. based on bill, tip, and number of splits \n  function calculate() { \n      const percentage = 1 + parseInt(tip.replace(\"%\", \"\")) / 100; \n      const result = ((bill * percentage) / split).toFixed(2); \n      setSplitTotal(result); \n  } \n\n  // useEffect hook to calculate the split total \n  // whenever bill, tip, or split changes \n  useEffect(() => { \n      calculate(); \n  }, [bill, tip, split]); \n\n  //\n \n  function plus(e) { \n    e.preventDefault(); \n    // const inputVal = inputRef.current.value; \n    // const newResult = result + Number(inputVal); \n    // setResult(newResult); \n    setResult((result) => result + Number(inputRef.current.value)); \n  } \n \n  function minus(e) { \n    e.preventDefault(); \n    const inputVal = inputRef.current.value; \n    const newResult = result - Number(inputVal); \n    setResult(newResult); \n  } \n \n  function times(e) { \n    e.preventDefault(); \n    const inputVal = inputRef.current.value; \n    const newResult = result * Number(inputVal); \n    setResult(newResult); \n  } \n \n  function divide(e) { \n    e.preventDefault(); \n    const inputVal = inputRef.current.value; \n    const newResult = result / Number(inputVal); \n    setResult(newResult); \n  } \n \n  function resetInput(e) { \n    e.preventDefault(); \n    inputRef.current.value = 0; \n  } \n \n  function resetResult(e) { \n    e.preventDefault(); \n    setResult(0); \n  } \n \n  return (\n    <div className=\"App\"> \n\n      <label>Bill total</label> \n      <input \n                type=\"text\"\n                placeholder={\"0.00\"} \n                value={bill} \n                onChange={handleBillChange} \n      /> \n  \n            {/* Tip input */} \n            <label>Tip</label> \n            <input \n                type=\"text\"\n                placeholder={\"0.00\"} \n                value={tip} \n                onChange={handleTipChange} \n            /> \n  \n            <div className=\"summary\"> \n  \n                {/* Split section */} \n                <div className=\"split\"> \n                    <label>Split</label> \n                    <div className=\"split-control\"> \n                        <button onClick={splitMinus}>-</button> \n                        <span>{split}</span> \n                        <button onClick={splitPlus}>+</button> \n                    </div> \n                </div> \n  \n                {/* Result section */} \n                <div className=\"result\"> \n                    <label>Split total</label> \n                    <span>{splitTotal}</span> \n                </div> \n            </div> \n    \n\n\n      <div> \n        <h1>Simplest Working Calculator</h1> \n      </div> \n      <form> \n        <p ref={resultRef}>{result}</p> \n        <input \n          pattern=\"[0-9]\" \n          ref={inputRef} \n          type=\"number\" \n          placeholder=\"Type a number\" \n        /> \n        <button onClick={plus}>add</button> \n        <button onClick={minus}>subtract</button> \n        <button onClick={times}>multiply</button> \n        <button onClick={divide}>divide</button> \n        <button onClick={resetInput}>reset input</button> \n        <button onClick={resetResult}>reset result</button> \n      </form> \n    </div> \n  ); \n} \n \nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}